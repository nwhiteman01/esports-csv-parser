searchState.loadedDescShard("esports_parser", 0, "Prompts the user to build a new coach with player inputs.\nUpdates weekly and totalpoints for Coaches.\nCoach menu\nCoaches can edit their team given a variety of options\nPrints a coach’s team by name.\nTakes user input for pro player and prints that player\nTakes user input for team and prints that team\nPro Stats menu\nPrompts for a player name for the given role until a valid …\nPrompts for a LCK team name for the given role until a …\nRemoves a coach by name.\nUpdates the totalpoints for pro players\nUtility menu\nStruct for Coach. This stores the Coach’s player names, …\nReturns the argument unchanged.\nGetter for Coach. Returns coach_name\nGetter for Coach. Returns team\nGetter for Coach. Returns totalpoints\nCalls <code>U::from(self)</code>.\nLoads coaches.csv to deseralize and store\nConstructor that builds a new empty Coach\nPrints all the coaches and their weekly/total points\nPrints inputted Coach’s team and scores\nRemoves a inputted Coach from the coaches’ vector\nSets the pro player according to player’s role. It they …\nSetter for Coach. Sets a inputted team for Coach\nAdds the current totalpoints with weeklypoints, updating …\nSets weekly score for Coach by finding all the …\nStore ALL of the Coaches’ data into coaches.csv. Resets …\nA struct that stores the stats and fantasy points of each …\nStruct for each LCK Team, stores their wins and names\nCalculates pro player’s points based off role and stats\nTurns an empty string to a f64 in order to avoid errors …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGetter for Team. Returns wins\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructor for Team. Builds a new Team with zero wins\nGetter for ProStats. Returns playername\nGetter for ProStats. Returns position\nPrints all of the pro players\nSearches through ProStats vector for the inputted …\nSearches through ProStats vector for the inputted …\nSearches through ProStats vector for the inputted teamname\nHelper function that prints the header for each of the pro …\nHelper function that prints the pro stats for a player\nPrints all of the team names and wins out of a Vector of …\nPrints the top weekly scorers per role\nMatches a role with a usize to help with sorting by role\nParses through both pro_list.csv and data.csv and store …\nGetter for Team. Returns teamname\nAdds the current totalpoints with weeklypoints\nGetter for ProStats. Returns weeklypoints\nStores all the pro players to pro_list.csv. Resets …")